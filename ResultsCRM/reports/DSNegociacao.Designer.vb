'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSNegociacao"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSNegociacao
    Inherits Global.System.Data.DataSet
    
    Private tableRelNegociacaoResumido As RelNegociacaoResumidoDataTable
    
    Private tableRelAtividade As RelAtividadeDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("RelNegociacaoResumido")) Is Nothing) Then
                MyBase.Tables.Add(New RelNegociacaoResumidoDataTable(ds.Tables("RelNegociacaoResumido")))
            End If
            If (Not (ds.Tables("RelAtividade")) Is Nothing) Then
                MyBase.Tables.Add(New RelAtividadeDataTable(ds.Tables("RelAtividade")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RelNegociacaoResumido() As RelNegociacaoResumidoDataTable
        Get
            Return Me.tableRelNegociacaoResumido
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RelAtividade() As RelAtividadeDataTable
        Get
            Return Me.tableRelAtividade
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSNegociacao = CType(MyBase.Clone,DSNegociacao)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("RelNegociacaoResumido")) Is Nothing) Then
                MyBase.Tables.Add(New RelNegociacaoResumidoDataTable(ds.Tables("RelNegociacaoResumido")))
            End If
            If (Not (ds.Tables("RelAtividade")) Is Nothing) Then
                MyBase.Tables.Add(New RelAtividadeDataTable(ds.Tables("RelAtividade")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableRelNegociacaoResumido = CType(MyBase.Tables("RelNegociacaoResumido"),RelNegociacaoResumidoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRelNegociacaoResumido) Is Nothing) Then
                Me.tableRelNegociacaoResumido.InitVars
            End If
        End If
        Me.tableRelAtividade = CType(MyBase.Tables("RelAtividade"),RelAtividadeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRelAtividade) Is Nothing) Then
                Me.tableRelAtividade.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DSNegociacao"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSNegociacao.xsd"
        Me.EnforceConstraints = false
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableRelNegociacaoResumido = New RelNegociacaoResumidoDataTable()
        MyBase.Tables.Add(Me.tableRelNegociacaoResumido)
        Me.tableRelAtividade = New RelAtividadeDataTable()
        MyBase.Tables.Add(Me.tableRelAtividade)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeRelNegociacaoResumido() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeRelAtividade() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSNegociacao = New DSNegociacao()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub RelNegociacaoResumidoRowChangeEventHandler(ByVal sender As Object, ByVal e As RelNegociacaoResumidoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub RelAtividadeRowChangeEventHandler(ByVal sender As Object, ByVal e As RelAtividadeRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RelNegociacaoResumidoDataTable
        Inherits Global.System.Data.TypedTableBase(Of RelNegociacaoResumidoRow)
        
        Private columncod_negociacao_cliente As Global.System.Data.DataColumn
        
        Private columncod_emitente As Global.System.Data.DataColumn
        
        Private columnnome As Global.System.Data.DataColumn
        
        Private columnestado_sigla As Global.System.Data.DataColumn
        
        Private columncidade_nome As Global.System.Data.DataColumn
        
        Private columntelefone1 As Global.System.Data.DataColumn
        
        Private columncod_contato As Global.System.Data.DataColumn
        
        Private columnnome_contato As Global.System.Data.DataColumn
        
        Private columndata_recontato As Global.System.Data.DataColumn
        
        Private columncod_etapa As Global.System.Data.DataColumn
        
        Private columnnome_etapa As Global.System.Data.DataColumn
        
        Private columncod_agente_venda As Global.System.Data.DataColumn
        
        Private columnnome_usuario As Global.System.Data.DataColumn
        
        Private columntotal_mercadoria As Global.System.Data.DataColumn
        
        Private columndata_data_ultimo_follow_up As Global.System.Data.DataColumn
        
        Private columncf_cliente As Global.System.Data.DataColumn
        
        Private columnf_empresa As Global.System.Data.DataColumn
        
        Private columnf_etapa1 As Global.System.Data.DataColumn
        
        Private columnf_etapa2 As Global.System.Data.DataColumn
        
        Private columnf_cadastramento1 As Global.System.Data.DataColumn
        
        Private columnf_cadastramento2 As Global.System.Data.DataColumn
        
        Private columnf_cod_status As Global.System.Data.DataColumn
        
        Private columnf_cod_agente_venda As Global.System.Data.DataColumn
        
        Private columnf_cod_representante As Global.System.Data.DataColumn
        
        Private columnf_cod_canal_venda As Global.System.Data.DataColumn
        
        Private columnf_cod_item As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RelNegociacaoResumido"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cod_negociacao_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_negociacao_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cod_emitenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_emitente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property nomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property estado_siglaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado_sigla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cidade_nomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncidade_nome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property telefone1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntelefone1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cod_contatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_contato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property nome_contatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome_contato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property data_recontatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_recontato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cod_etapaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_etapa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property nome_etapaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome_etapa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cod_agente_vendaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_agente_venda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property nome_usuarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome_usuario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property total_mercadoriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_mercadoria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property data_data_ultimo_follow_up() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_data_ultimo_follow_up
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cf_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncf_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property f_empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_empresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property f_etapa1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_etapa1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property f_etapa2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_etapa2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property f_cadastramento1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_cadastramento1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property f_cadastramento2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_cadastramento2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property f_cod_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_cod_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property f_cod_agente_vendaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_cod_agente_venda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property f_cod_representanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_cod_representante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property f_cod_canal_vendaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_cod_canal_venda
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property f_cod_itemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnf_cod_item
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RelNegociacaoResumidoRow
            Get
                Return CType(Me.Rows(index),RelNegociacaoResumidoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RelNegociacaoResumidoRowChanging As RelNegociacaoResumidoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RelNegociacaoResumidoRowChanged As RelNegociacaoResumidoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RelNegociacaoResumidoRowDeleting As RelNegociacaoResumidoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RelNegociacaoResumidoRowDeleted As RelNegociacaoResumidoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddRelNegociacaoResumidoRow(ByVal row As RelNegociacaoResumidoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddRelNegociacaoResumidoRow( _
                    ByVal cod_negociacao_cliente As Long,  _
                    ByVal cod_emitente As Long,  _
                    ByVal nome As String,  _
                    ByVal estado_sigla As String,  _
                    ByVal cidade_nome As String,  _
                    ByVal telefone1 As String,  _
                    ByVal cod_contato As Long,  _
                    ByVal nome_contato As String,  _
                    ByVal data_recontato As Date,  _
                    ByVal cod_etapa As Integer,  _
                    ByVal nome_etapa As String,  _
                    ByVal cod_agente_venda As Integer,  _
                    ByVal nome_usuario As String,  _
                    ByVal total_mercadoria As Decimal,  _
                    ByVal data_ultimo_follow_up As Date,  _
                    ByVal cf_cliente As String,  _
                    ByVal f_empresa As Long,  _
                    ByVal f_etapa1 As Long,  _
                    ByVal f_etapa2 As Long,  _
                    ByVal f_cadastramento1 As Long,  _
                    ByVal f_cadastramento2 As Long,  _
                    ByVal f_cod_status As Long,  _
                    ByVal f_cod_agente_venda As Long,  _
                    ByVal f_cod_representante As Long,  _
                    ByVal f_cod_canal_venda As Long,  _
                    ByVal f_cod_item As String) As RelNegociacaoResumidoRow
            Dim rowRelNegociacaoResumidoRow As RelNegociacaoResumidoRow = CType(Me.NewRow,RelNegociacaoResumidoRow)
            Dim columnValuesArray() As Object = New Object() {cod_negociacao_cliente, cod_emitente, nome, estado_sigla, cidade_nome, telefone1, cod_contato, nome_contato, data_recontato, cod_etapa, nome_etapa, cod_agente_venda, nome_usuario, total_mercadoria, data_ultimo_follow_up, cf_cliente, f_empresa, f_etapa1, f_etapa2, f_cadastramento1, f_cadastramento2, f_cod_status, f_cod_agente_venda, f_cod_representante, f_cod_canal_venda, f_cod_item}
            rowRelNegociacaoResumidoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRelNegociacaoResumidoRow)
            Return rowRelNegociacaoResumidoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function FindBycod_negociacao_cliente(ByVal cod_negociacao_cliente As Long) As RelNegociacaoResumidoRow
            Return CType(Me.Rows.Find(New Object() {cod_negociacao_cliente}),RelNegociacaoResumidoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RelNegociacaoResumidoDataTable = CType(MyBase.Clone,RelNegociacaoResumidoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RelNegociacaoResumidoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columncod_negociacao_cliente = MyBase.Columns("cod_negociacao_cliente")
            Me.columncod_emitente = MyBase.Columns("cod_emitente")
            Me.columnnome = MyBase.Columns("nome")
            Me.columnestado_sigla = MyBase.Columns("estado_sigla")
            Me.columncidade_nome = MyBase.Columns("cidade_nome")
            Me.columntelefone1 = MyBase.Columns("telefone1")
            Me.columncod_contato = MyBase.Columns("cod_contato")
            Me.columnnome_contato = MyBase.Columns("nome_contato")
            Me.columndata_recontato = MyBase.Columns("data_recontato")
            Me.columncod_etapa = MyBase.Columns("cod_etapa")
            Me.columnnome_etapa = MyBase.Columns("nome_etapa")
            Me.columncod_agente_venda = MyBase.Columns("cod_agente_venda")
            Me.columnnome_usuario = MyBase.Columns("nome_usuario")
            Me.columntotal_mercadoria = MyBase.Columns("total_mercadoria")
            Me.columndata_data_ultimo_follow_up = MyBase.Columns("data_ultimo_follow_up")
            Me.columncf_cliente = MyBase.Columns("cf_cliente")
            Me.columnf_empresa = MyBase.Columns("f_empresa")
            Me.columnf_etapa1 = MyBase.Columns("f_etapa1")
            Me.columnf_etapa2 = MyBase.Columns("f_etapa2")
            Me.columnf_cadastramento1 = MyBase.Columns("f_cadastramento1")
            Me.columnf_cadastramento2 = MyBase.Columns("f_cadastramento2")
            Me.columnf_cod_status = MyBase.Columns("f_cod_status")
            Me.columnf_cod_agente_venda = MyBase.Columns("f_cod_agente_venda")
            Me.columnf_cod_representante = MyBase.Columns("f_cod_representante")
            Me.columnf_cod_canal_venda = MyBase.Columns("f_cod_canal_venda")
            Me.columnf_cod_item = MyBase.Columns("f_cod_item")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columncod_negociacao_cliente = New Global.System.Data.DataColumn("cod_negociacao_cliente", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_negociacao_cliente)
            Me.columncod_emitente = New Global.System.Data.DataColumn("cod_emitente", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_emitente)
            Me.columnnome = New Global.System.Data.DataColumn("nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome)
            Me.columnestado_sigla = New Global.System.Data.DataColumn("estado_sigla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado_sigla)
            Me.columncidade_nome = New Global.System.Data.DataColumn("cidade_nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncidade_nome)
            Me.columntelefone1 = New Global.System.Data.DataColumn("telefone1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntelefone1)
            Me.columncod_contato = New Global.System.Data.DataColumn("cod_contato", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_contato)
            Me.columnnome_contato = New Global.System.Data.DataColumn("nome_contato", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome_contato)
            Me.columndata_recontato = New Global.System.Data.DataColumn("data_recontato", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata_recontato)
            Me.columncod_etapa = New Global.System.Data.DataColumn("cod_etapa", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_etapa)
            Me.columnnome_etapa = New Global.System.Data.DataColumn("nome_etapa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome_etapa)
            Me.columncod_agente_venda = New Global.System.Data.DataColumn("cod_agente_venda", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_agente_venda)
            Me.columnnome_usuario = New Global.System.Data.DataColumn("nome_usuario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome_usuario)
            Me.columntotal_mercadoria = New Global.System.Data.DataColumn("total_mercadoria", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_mercadoria)
            Me.columndata_data_ultimo_follow_up = New Global.System.Data.DataColumn("data_ultimo_follow_up", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me.columndata_data_ultimo_follow_up.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "data_data_ultimo_follow_up")
            Me.columndata_data_ultimo_follow_up.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columndata_data_ultimo_follow_up")
            Me.columndata_data_ultimo_follow_up.ExtendedProperties.Add("Generator_UserColumnName", "data_ultimo_follow_up")
            MyBase.Columns.Add(Me.columndata_data_ultimo_follow_up)
            Me.columncf_cliente = New Global.System.Data.DataColumn("cf_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncf_cliente)
            Me.columnf_empresa = New Global.System.Data.DataColumn("f_empresa", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_empresa)
            Me.columnf_etapa1 = New Global.System.Data.DataColumn("f_etapa1", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_etapa1)
            Me.columnf_etapa2 = New Global.System.Data.DataColumn("f_etapa2", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_etapa2)
            Me.columnf_cadastramento1 = New Global.System.Data.DataColumn("f_cadastramento1", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_cadastramento1)
            Me.columnf_cadastramento2 = New Global.System.Data.DataColumn("f_cadastramento2", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_cadastramento2)
            Me.columnf_cod_status = New Global.System.Data.DataColumn("f_cod_status", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_cod_status)
            Me.columnf_cod_agente_venda = New Global.System.Data.DataColumn("f_cod_agente_venda", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_cod_agente_venda)
            Me.columnf_cod_representante = New Global.System.Data.DataColumn("f_cod_representante", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_cod_representante)
            Me.columnf_cod_canal_venda = New Global.System.Data.DataColumn("f_cod_canal_venda", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_cod_canal_venda)
            Me.columnf_cod_item = New Global.System.Data.DataColumn("f_cod_item", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnf_cod_item)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint3", New Global.System.Data.DataColumn() {Me.columncod_negociacao_cliente}, true))
            Me.columncod_negociacao_cliente.AllowDBNull = false
            Me.columncod_negociacao_cliente.Unique = true
            Me.columncod_emitente.AllowDBNull = false
            Me.columnnome.MaxLength = 80
            Me.columnestado_sigla.ReadOnly = true
            Me.columnestado_sigla.MaxLength = 5
            Me.columncidade_nome.ReadOnly = true
            Me.columncidade_nome.MaxLength = 50
            Me.columntelefone1.ReadOnly = true
            Me.columntelefone1.MaxLength = 30
            Me.columncod_contato.AllowDBNull = false
            Me.columnnome_contato.MaxLength = 50
            Me.columncod_etapa.AllowDBNull = false
            Me.columnnome_etapa.MaxLength = 50
            Me.columnnome_usuario.AllowDBNull = false
            Me.columnnome_usuario.MaxLength = 40
            Me.columntotal_mercadoria.AllowDBNull = false
            Me.columncf_cliente.ReadOnly = true
            Me.columnf_empresa.ReadOnly = true
            Me.columnf_etapa1.ReadOnly = true
            Me.columnf_etapa2.ReadOnly = true
            Me.columnf_cadastramento1.ReadOnly = true
            Me.columnf_cadastramento2.ReadOnly = true
            Me.columnf_cod_status.ReadOnly = true
            Me.columnf_cod_agente_venda.ReadOnly = true
            Me.columnf_cod_representante.ReadOnly = true
            Me.columnf_cod_canal_venda.ReadOnly = true
            Me.columnf_cod_item.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewRelNegociacaoResumidoRow() As RelNegociacaoResumidoRow
            Return CType(Me.NewRow,RelNegociacaoResumidoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RelNegociacaoResumidoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RelNegociacaoResumidoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RelNegociacaoResumidoRowChangedEvent) Is Nothing) Then
                RaiseEvent RelNegociacaoResumidoRowChanged(Me, New RelNegociacaoResumidoRowChangeEvent(CType(e.Row,RelNegociacaoResumidoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RelNegociacaoResumidoRowChangingEvent) Is Nothing) Then
                RaiseEvent RelNegociacaoResumidoRowChanging(Me, New RelNegociacaoResumidoRowChangeEvent(CType(e.Row,RelNegociacaoResumidoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RelNegociacaoResumidoRowDeletedEvent) Is Nothing) Then
                RaiseEvent RelNegociacaoResumidoRowDeleted(Me, New RelNegociacaoResumidoRowChangeEvent(CType(e.Row,RelNegociacaoResumidoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RelNegociacaoResumidoRowDeletingEvent) Is Nothing) Then
                RaiseEvent RelNegociacaoResumidoRowDeleting(Me, New RelNegociacaoResumidoRowChangeEvent(CType(e.Row,RelNegociacaoResumidoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveRelNegociacaoResumidoRow(ByVal row As RelNegociacaoResumidoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSNegociacao = New DSNegociacao()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RelNegociacaoResumidoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RelAtividadeDataTable
        Inherits Global.System.Data.TypedTableBase(Of RelAtividadeRow)
        
        Private columnestado_sigla As Global.System.Data.DataColumn
        
        Private columncidade_nome As Global.System.Data.DataColumn
        
        Private columndata_recontato As Global.System.Data.DataColumn
        
        Private columnnome_usuario As Global.System.Data.DataColumn
        
        Private columnempresa As Global.System.Data.DataColumn
        
        Private columntipo_info As Global.System.Data.DataColumn
        
        Private columnseq_follow_up As Global.System.Data.DataColumn
        
        Private columndata_follow_up As Global.System.Data.DataColumn
        
        Private columnhora_follow_up As Global.System.Data.DataColumn
        
        Private columncod_negociacao_cliente As Global.System.Data.DataColumn
        
        Private columnnome_representante As Global.System.Data.DataColumn
        
        Private columncod_representante As Global.System.Data.DataColumn
        
        Private columnnome_cliente As Global.System.Data.DataColumn
        
        Private columncod_emitente As Global.System.Data.DataColumn
        
        Private columncnpj As Global.System.Data.DataColumn
        
        Private columndesc_mercado As Global.System.Data.DataColumn
        
        Private columnitens As Global.System.Data.DataColumn
        
        Private columndesc_acao As Global.System.Data.DataColumn
        
        Private columndesc_fonte_origem As Global.System.Data.DataColumn
        
        Private columndesc_funil As Global.System.Data.DataColumn
        
        Private columndesc_etapa As Global.System.Data.DataColumn
        
        Private columndesc_situacao As Global.System.Data.DataColumn
        
        Private columntotal_pedido As Global.System.Data.DataColumn
        
        Private columncod_usuario As Global.System.Data.DataColumn
        
        Private columndesc_follow_up As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RelAtividade"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property estado_siglaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnestado_sigla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cidade_nomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncidade_nome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property data_recontatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_recontato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property nome_usuarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome_usuario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property empresaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnempresa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property tipo_infoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntipo_info
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property seq_follow_upColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnseq_follow_up
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property data_follow_upColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_follow_up
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property hora_follow_upColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnhora_follow_up
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cod_negociacao_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_negociacao_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property nome_representanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome_representante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cod_representanteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_representante
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property nome_clienteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome_cliente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cod_emitenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_emitente
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cnpjColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncnpj
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property desc_mercadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_mercado
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property itensColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnitens
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property desc_acaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_acao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property desc_fonte_origemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_fonte_origem
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property desc_funilColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_funil
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property desc_etapaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_etapa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property desc_situacaoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_situacao
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property total_pedidoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal_pedido
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property cod_usuarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_usuario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property desc_follow_upColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndesc_follow_up
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RelAtividadeRow
            Get
                Return CType(Me.Rows(index),RelAtividadeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RelAtividadeRowChanging As RelAtividadeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RelAtividadeRowChanged As RelAtividadeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RelAtividadeRowDeleting As RelAtividadeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event RelAtividadeRowDeleted As RelAtividadeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddRelAtividadeRow(ByVal row As RelAtividadeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddRelAtividadeRow( _
                    ByVal estado_sigla As String,  _
                    ByVal cidade_nome As String,  _
                    ByVal data_recontato As Date,  _
                    ByVal nome_usuario As String,  _
                    ByVal empresa As Integer,  _
                    ByVal tipo_info As Integer,  _
                    ByVal seq_follow_up As Integer,  _
                    ByVal data_follow_up As Date,  _
                    ByVal hora_follow_up As String,  _
                    ByVal cod_negociacao_cliente As Integer,  _
                    ByVal nome_representante As String,  _
                    ByVal cod_representante As Integer,  _
                    ByVal nome_cliente As String,  _
                    ByVal cod_emitente As Integer,  _
                    ByVal cnpj As String,  _
                    ByVal desc_mercado As String,  _
                    ByVal itens As String,  _
                    ByVal desc_acao As String,  _
                    ByVal desc_fonte_origem As String,  _
                    ByVal desc_funil As String,  _
                    ByVal desc_etapa As String,  _
                    ByVal desc_situacao As String,  _
                    ByVal total_pedido As Decimal,  _
                    ByVal cod_usuario As Integer,  _
                    ByVal desc_follow_up As String) As RelAtividadeRow
            Dim rowRelAtividadeRow As RelAtividadeRow = CType(Me.NewRow,RelAtividadeRow)
            Dim columnValuesArray() As Object = New Object() {estado_sigla, cidade_nome, data_recontato, nome_usuario, empresa, tipo_info, seq_follow_up, data_follow_up, hora_follow_up, cod_negociacao_cliente, nome_representante, cod_representante, nome_cliente, cod_emitente, cnpj, desc_mercado, itens, desc_acao, desc_fonte_origem, desc_funil, desc_etapa, desc_situacao, total_pedido, cod_usuario, desc_follow_up}
            rowRelAtividadeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRelAtividadeRow)
            Return rowRelAtividadeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RelAtividadeDataTable = CType(MyBase.Clone,RelAtividadeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RelAtividadeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnestado_sigla = MyBase.Columns("estado_sigla")
            Me.columncidade_nome = MyBase.Columns("cidade_nome")
            Me.columndata_recontato = MyBase.Columns("data_recontato")
            Me.columnnome_usuario = MyBase.Columns("nome_usuario")
            Me.columnempresa = MyBase.Columns("empresa")
            Me.columntipo_info = MyBase.Columns("tipo_info")
            Me.columnseq_follow_up = MyBase.Columns("seq_follow_up")
            Me.columndata_follow_up = MyBase.Columns("data_follow_up")
            Me.columnhora_follow_up = MyBase.Columns("hora_follow_up")
            Me.columncod_negociacao_cliente = MyBase.Columns("cod_negociacao_cliente")
            Me.columnnome_representante = MyBase.Columns("nome_representante")
            Me.columncod_representante = MyBase.Columns("cod_representante")
            Me.columnnome_cliente = MyBase.Columns("nome_cliente")
            Me.columncod_emitente = MyBase.Columns("cod_emitente")
            Me.columncnpj = MyBase.Columns("cnpj")
            Me.columndesc_mercado = MyBase.Columns("desc_mercado")
            Me.columnitens = MyBase.Columns("itens")
            Me.columndesc_acao = MyBase.Columns("desc_acao")
            Me.columndesc_fonte_origem = MyBase.Columns("desc_fonte_origem")
            Me.columndesc_funil = MyBase.Columns("desc_funil")
            Me.columndesc_etapa = MyBase.Columns("desc_etapa")
            Me.columndesc_situacao = MyBase.Columns("desc_situacao")
            Me.columntotal_pedido = MyBase.Columns("total_pedido")
            Me.columncod_usuario = MyBase.Columns("cod_usuario")
            Me.columndesc_follow_up = MyBase.Columns("desc_follow_up")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnestado_sigla = New Global.System.Data.DataColumn("estado_sigla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnestado_sigla)
            Me.columncidade_nome = New Global.System.Data.DataColumn("cidade_nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncidade_nome)
            Me.columndata_recontato = New Global.System.Data.DataColumn("data_recontato", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata_recontato)
            Me.columnnome_usuario = New Global.System.Data.DataColumn("nome_usuario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome_usuario)
            Me.columnempresa = New Global.System.Data.DataColumn("empresa", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnempresa)
            Me.columntipo_info = New Global.System.Data.DataColumn("tipo_info", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntipo_info)
            Me.columnseq_follow_up = New Global.System.Data.DataColumn("seq_follow_up", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnseq_follow_up)
            Me.columndata_follow_up = New Global.System.Data.DataColumn("data_follow_up", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata_follow_up)
            Me.columnhora_follow_up = New Global.System.Data.DataColumn("hora_follow_up", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnhora_follow_up)
            Me.columncod_negociacao_cliente = New Global.System.Data.DataColumn("cod_negociacao_cliente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_negociacao_cliente)
            Me.columnnome_representante = New Global.System.Data.DataColumn("nome_representante", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome_representante)
            Me.columncod_representante = New Global.System.Data.DataColumn("cod_representante", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_representante)
            Me.columnnome_cliente = New Global.System.Data.DataColumn("nome_cliente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome_cliente)
            Me.columncod_emitente = New Global.System.Data.DataColumn("cod_emitente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_emitente)
            Me.columncnpj = New Global.System.Data.DataColumn("cnpj", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncnpj)
            Me.columndesc_mercado = New Global.System.Data.DataColumn("desc_mercado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_mercado)
            Me.columnitens = New Global.System.Data.DataColumn("itens", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnitens)
            Me.columndesc_acao = New Global.System.Data.DataColumn("desc_acao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_acao)
            Me.columndesc_fonte_origem = New Global.System.Data.DataColumn("desc_fonte_origem", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_fonte_origem)
            Me.columndesc_funil = New Global.System.Data.DataColumn("desc_funil", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_funil)
            Me.columndesc_etapa = New Global.System.Data.DataColumn("desc_etapa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_etapa)
            Me.columndesc_situacao = New Global.System.Data.DataColumn("desc_situacao", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_situacao)
            Me.columntotal_pedido = New Global.System.Data.DataColumn("total_pedido", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal_pedido)
            Me.columncod_usuario = New Global.System.Data.DataColumn("cod_usuario", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_usuario)
            Me.columndesc_follow_up = New Global.System.Data.DataColumn("desc_follow_up", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndesc_follow_up)
            Me.columnestado_sigla.ReadOnly = true
            Me.columnestado_sigla.MaxLength = 5
            Me.columncidade_nome.ReadOnly = true
            Me.columncidade_nome.MaxLength = 50
            Me.columnnome_usuario.MaxLength = 40
            Me.columnempresa.ReadOnly = true
            Me.columntipo_info.ReadOnly = true
            Me.columnseq_follow_up.ReadOnly = true
            Me.columndata_follow_up.ReadOnly = true
            Me.columnhora_follow_up.ReadOnly = true
            Me.columnhora_follow_up.MaxLength = 8
            Me.columncod_negociacao_cliente.ReadOnly = true
            Me.columnnome_representante.ReadOnly = true
            Me.columnnome_representante.MaxLength = 100
            Me.columncod_representante.ReadOnly = true
            Me.columnnome_cliente.ReadOnly = true
            Me.columnnome_cliente.MaxLength = 100
            Me.columncod_emitente.ReadOnly = true
            Me.columncnpj.ReadOnly = true
            Me.columncnpj.MaxLength = 20
            Me.columndesc_mercado.ReadOnly = true
            Me.columndesc_mercado.MaxLength = 2000000000
            Me.columnitens.ReadOnly = true
            Me.columnitens.MaxLength = 2000000000
            Me.columndesc_acao.ReadOnly = true
            Me.columndesc_acao.MaxLength = 100
            Me.columndesc_fonte_origem.ReadOnly = true
            Me.columndesc_fonte_origem.MaxLength = 100
            Me.columndesc_funil.ReadOnly = true
            Me.columndesc_funil.MaxLength = 100
            Me.columndesc_etapa.ReadOnly = true
            Me.columndesc_etapa.MaxLength = 100
            Me.columndesc_situacao.ReadOnly = true
            Me.columndesc_situacao.MaxLength = 100
            Me.columntotal_pedido.ReadOnly = true
            Me.columncod_usuario.ReadOnly = true
            Me.columndesc_follow_up.ReadOnly = true
            Me.columndesc_follow_up.MaxLength = 2000000000
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewRelAtividadeRow() As RelAtividadeRow
            Return CType(Me.NewRow,RelAtividadeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RelAtividadeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RelAtividadeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RelAtividadeRowChangedEvent) Is Nothing) Then
                RaiseEvent RelAtividadeRowChanged(Me, New RelAtividadeRowChangeEvent(CType(e.Row,RelAtividadeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RelAtividadeRowChangingEvent) Is Nothing) Then
                RaiseEvent RelAtividadeRowChanging(Me, New RelAtividadeRowChangeEvent(CType(e.Row,RelAtividadeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RelAtividadeRowDeletedEvent) Is Nothing) Then
                RaiseEvent RelAtividadeRowDeleted(Me, New RelAtividadeRowChangeEvent(CType(e.Row,RelAtividadeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RelAtividadeRowDeletingEvent) Is Nothing) Then
                RaiseEvent RelAtividadeRowDeleting(Me, New RelAtividadeRowChangeEvent(CType(e.Row,RelAtividadeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveRelAtividadeRow(ByVal row As RelAtividadeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSNegociacao = New DSNegociacao()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RelAtividadeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RelNegociacaoResumidoRow
        Inherits Global.System.Data.DataRow
        
        Private tableRelNegociacaoResumido As RelNegociacaoResumidoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRelNegociacaoResumido = CType(Me.Table,RelNegociacaoResumidoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cod_negociacao_cliente() As Long
            Get
                Return CType(Me(Me.tableRelNegociacaoResumido.cod_negociacao_clienteColumn),Long)
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.cod_negociacao_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cod_emitente() As Long
            Get
                Return CType(Me(Me.tableRelNegociacaoResumido.cod_emitenteColumn),Long)
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.cod_emitenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property nome() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.nomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nome' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.nomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property estado_sigla() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.estado_siglaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'estado_sigla' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.estado_siglaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cidade_nome() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.cidade_nomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cidade_nome' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.cidade_nomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property telefone1() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.telefone1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'telefone1' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.telefone1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cod_contato() As Long
            Get
                Return CType(Me(Me.tableRelNegociacaoResumido.cod_contatoColumn),Long)
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.cod_contatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property nome_contato() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.nome_contatoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nome_contato' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.nome_contatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property data_recontato() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.data_recontatoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'data_recontato' in table 'RelNegociacaoResumido' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.data_recontatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cod_etapa() As Integer
            Get
                Return CType(Me(Me.tableRelNegociacaoResumido.cod_etapaColumn),Integer)
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.cod_etapaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property nome_etapa() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.nome_etapaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nome_etapa' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.nome_etapaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cod_agente_venda() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.cod_agente_vendaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cod_agente_venda' in table 'RelNegociacaoResumido' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.cod_agente_vendaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property nome_usuario() As String
            Get
                Return CType(Me(Me.tableRelNegociacaoResumido.nome_usuarioColumn),String)
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.nome_usuarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property total_mercadoria() As Decimal
            Get
                Return CType(Me(Me.tableRelNegociacaoResumido.total_mercadoriaColumn),Decimal)
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.total_mercadoriaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property data_ultimo_follow_up() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.data_data_ultimo_follow_up),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'data_ultimo_follow_up' in table 'RelNegociacaoResumido' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.data_data_ultimo_follow_up) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cf_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.cf_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cf_cliente' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.cf_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property f_empresa() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.f_empresaColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'f_empresa' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.f_empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property f_etapa1() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.f_etapa1Column),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'f_etapa1' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.f_etapa1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property f_etapa2() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.f_etapa2Column),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'f_etapa2' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.f_etapa2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property f_cadastramento1() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.f_cadastramento1Column),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'f_cadastramento1' in table 'RelNegociacaoResumido' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.f_cadastramento1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property f_cadastramento2() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.f_cadastramento2Column),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'f_cadastramento2' in table 'RelNegociacaoResumido' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.f_cadastramento2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property f_cod_status() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.f_cod_statusColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'f_cod_status' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.f_cod_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property f_cod_agente_venda() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.f_cod_agente_vendaColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'f_cod_agente_venda' in table 'RelNegociacaoResumido' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.f_cod_agente_vendaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property f_cod_representante() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.f_cod_representanteColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'f_cod_representante' in table 'RelNegociacaoResumido' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.f_cod_representanteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property f_cod_canal_venda() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.f_cod_canal_vendaColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'f_cod_canal_venda' in table 'RelNegociacaoResumido' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.f_cod_canal_vendaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property f_cod_item() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelNegociacaoResumido.f_cod_itemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'f_cod_item' in table 'RelNegociacaoResumido' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelNegociacaoResumido.f_cod_itemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsnomeNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.nomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetnomeNull()
            Me(Me.tableRelNegociacaoResumido.nomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isestado_siglaNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.estado_siglaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setestado_siglaNull()
            Me(Me.tableRelNegociacaoResumido.estado_siglaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Iscidade_nomeNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.cidade_nomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setcidade_nomeNull()
            Me(Me.tableRelNegociacaoResumido.cidade_nomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Istelefone1Null() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.telefone1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Settelefone1Null()
            Me(Me.tableRelNegociacaoResumido.telefone1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isnome_contatoNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.nome_contatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setnome_contatoNull()
            Me(Me.tableRelNegociacaoResumido.nome_contatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdata_recontatoNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.data_recontatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdata_recontatoNull()
            Me(Me.tableRelNegociacaoResumido.data_recontatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isnome_etapaNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.nome_etapaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setnome_etapaNull()
            Me(Me.tableRelNegociacaoResumido.nome_etapaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Iscod_agente_vendaNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.cod_agente_vendaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setcod_agente_vendaNull()
            Me(Me.tableRelNegociacaoResumido.cod_agente_vendaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdata_ultimo_follow_upNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.data_data_ultimo_follow_up)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdata_ultimo_follow_upNull()
            Me(Me.tableRelNegociacaoResumido.data_data_ultimo_follow_up) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Iscf_clienteNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.cf_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setcf_clienteNull()
            Me(Me.tableRelNegociacaoResumido.cf_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isf_empresaNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.f_empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setf_empresaNull()
            Me(Me.tableRelNegociacaoResumido.f_empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isf_etapa1Null() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.f_etapa1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setf_etapa1Null()
            Me(Me.tableRelNegociacaoResumido.f_etapa1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isf_etapa2Null() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.f_etapa2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setf_etapa2Null()
            Me(Me.tableRelNegociacaoResumido.f_etapa2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isf_cadastramento1Null() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.f_cadastramento1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setf_cadastramento1Null()
            Me(Me.tableRelNegociacaoResumido.f_cadastramento1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isf_cadastramento2Null() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.f_cadastramento2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setf_cadastramento2Null()
            Me(Me.tableRelNegociacaoResumido.f_cadastramento2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isf_cod_statusNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.f_cod_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setf_cod_statusNull()
            Me(Me.tableRelNegociacaoResumido.f_cod_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isf_cod_agente_vendaNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.f_cod_agente_vendaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setf_cod_agente_vendaNull()
            Me(Me.tableRelNegociacaoResumido.f_cod_agente_vendaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isf_cod_representanteNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.f_cod_representanteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setf_cod_representanteNull()
            Me(Me.tableRelNegociacaoResumido.f_cod_representanteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isf_cod_canal_vendaNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.f_cod_canal_vendaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setf_cod_canal_vendaNull()
            Me(Me.tableRelNegociacaoResumido.f_cod_canal_vendaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isf_cod_itemNull() As Boolean
            Return Me.IsNull(Me.tableRelNegociacaoResumido.f_cod_itemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setf_cod_itemNull()
            Me(Me.tableRelNegociacaoResumido.f_cod_itemColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RelAtividadeRow
        Inherits Global.System.Data.DataRow
        
        Private tableRelAtividade As RelAtividadeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRelAtividade = CType(Me.Table,RelAtividadeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property estado_sigla() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.estado_siglaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'estado_sigla' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.estado_siglaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cidade_nome() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.cidade_nomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cidade_nome' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.cidade_nomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property data_recontato() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.data_recontatoColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'data_recontato' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.data_recontatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property nome_usuario() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.nome_usuarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nome_usuario' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.nome_usuarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property empresa() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.empresaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'empresa' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.empresaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property tipo_info() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.tipo_infoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'tipo_info' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.tipo_infoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property seq_follow_up() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.seq_follow_upColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'seq_follow_up' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.seq_follow_upColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property data_follow_up() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.data_follow_upColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'data_follow_up' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.data_follow_upColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property hora_follow_up() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.hora_follow_upColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'hora_follow_up' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.hora_follow_upColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cod_negociacao_cliente() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.cod_negociacao_clienteColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cod_negociacao_cliente' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.cod_negociacao_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property nome_representante() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.nome_representanteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nome_representante' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.nome_representanteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cod_representante() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.cod_representanteColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cod_representante' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.cod_representanteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property nome_cliente() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.nome_clienteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'nome_cliente' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.nome_clienteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cod_emitente() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.cod_emitenteColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cod_emitente' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.cod_emitenteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cnpj() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.cnpjColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cnpj' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.cnpjColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property desc_mercado() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.desc_mercadoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'desc_mercado' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.desc_mercadoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property itens() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.itensColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'itens' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.itensColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property desc_acao() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.desc_acaoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'desc_acao' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.desc_acaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property desc_fonte_origem() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.desc_fonte_origemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'desc_fonte_origem' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.desc_fonte_origemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property desc_funil() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.desc_funilColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'desc_funil' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.desc_funilColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property desc_etapa() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.desc_etapaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'desc_etapa' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.desc_etapaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property desc_situacao() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.desc_situacaoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'desc_situacao' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.desc_situacaoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property total_pedido() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.total_pedidoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'total_pedido' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.total_pedidoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property cod_usuario() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.cod_usuarioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'cod_usuario' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.cod_usuarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property desc_follow_up() As String
            Get
                Try 
                    Return CType(Me(Me.tableRelAtividade.desc_follow_upColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'desc_follow_up' in table 'RelAtividade' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRelAtividade.desc_follow_upColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isestado_siglaNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.estado_siglaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setestado_siglaNull()
            Me(Me.tableRelAtividade.estado_siglaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Iscidade_nomeNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.cidade_nomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setcidade_nomeNull()
            Me(Me.tableRelAtividade.cidade_nomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdata_recontatoNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.data_recontatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdata_recontatoNull()
            Me(Me.tableRelAtividade.data_recontatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isnome_usuarioNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.nome_usuarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setnome_usuarioNull()
            Me(Me.tableRelAtividade.nome_usuarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsempresaNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.empresaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetempresaNull()
            Me(Me.tableRelAtividade.empresaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Istipo_infoNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.tipo_infoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Settipo_infoNull()
            Me(Me.tableRelAtividade.tipo_infoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isseq_follow_upNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.seq_follow_upColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setseq_follow_upNull()
            Me(Me.tableRelAtividade.seq_follow_upColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdata_follow_upNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.data_follow_upColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdata_follow_upNull()
            Me(Me.tableRelAtividade.data_follow_upColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Ishora_follow_upNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.hora_follow_upColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Sethora_follow_upNull()
            Me(Me.tableRelAtividade.hora_follow_upColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Iscod_negociacao_clienteNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.cod_negociacao_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setcod_negociacao_clienteNull()
            Me(Me.tableRelAtividade.cod_negociacao_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isnome_representanteNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.nome_representanteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setnome_representanteNull()
            Me(Me.tableRelAtividade.nome_representanteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Iscod_representanteNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.cod_representanteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setcod_representanteNull()
            Me(Me.tableRelAtividade.cod_representanteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isnome_clienteNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.nome_clienteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setnome_clienteNull()
            Me(Me.tableRelAtividade.nome_clienteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Iscod_emitenteNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.cod_emitenteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setcod_emitenteNull()
            Me(Me.tableRelAtividade.cod_emitenteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IscnpjNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.cnpjColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetcnpjNull()
            Me(Me.tableRelAtividade.cnpjColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdesc_mercadoNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.desc_mercadoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdesc_mercadoNull()
            Me(Me.tableRelAtividade.desc_mercadoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsitensNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.itensColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetitensNull()
            Me(Me.tableRelAtividade.itensColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdesc_acaoNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.desc_acaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdesc_acaoNull()
            Me(Me.tableRelAtividade.desc_acaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdesc_fonte_origemNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.desc_fonte_origemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdesc_fonte_origemNull()
            Me(Me.tableRelAtividade.desc_fonte_origemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdesc_funilNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.desc_funilColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdesc_funilNull()
            Me(Me.tableRelAtividade.desc_funilColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdesc_etapaNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.desc_etapaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdesc_etapaNull()
            Me(Me.tableRelAtividade.desc_etapaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdesc_situacaoNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.desc_situacaoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdesc_situacaoNull()
            Me(Me.tableRelAtividade.desc_situacaoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Istotal_pedidoNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.total_pedidoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Settotal_pedidoNull()
            Me(Me.tableRelAtividade.total_pedidoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Iscod_usuarioNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.cod_usuarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setcod_usuarioNull()
            Me(Me.tableRelAtividade.cod_usuarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function Isdesc_follow_upNull() As Boolean
            Return Me.IsNull(Me.tableRelAtividade.desc_follow_upColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub Setdesc_follow_upNull()
            Me(Me.tableRelAtividade.desc_follow_upColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class RelNegociacaoResumidoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RelNegociacaoResumidoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As RelNegociacaoResumidoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As RelNegociacaoResumidoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class RelAtividadeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RelAtividadeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As RelAtividadeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As RelAtividadeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSNegociacaoTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RelNegociacaoResumidoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RelNegociacaoResumido"
            tableMapping.ColumnMappings.Add("cod_negociacao_cliente", "cod_negociacao_cliente")
            tableMapping.ColumnMappings.Add("cod_emitente", "cod_emitente")
            tableMapping.ColumnMappings.Add("nome", "nome")
            tableMapping.ColumnMappings.Add("estado_sigla", "estado_sigla")
            tableMapping.ColumnMappings.Add("cidade_nome", "cidade_nome")
            tableMapping.ColumnMappings.Add("telefone1", "telefone1")
            tableMapping.ColumnMappings.Add("cod_contato", "cod_contato")
            tableMapping.ColumnMappings.Add("nome_contato", "nome_contato")
            tableMapping.ColumnMappings.Add("data_recontato", "data_recontato")
            tableMapping.ColumnMappings.Add("cod_etapa", "cod_etapa")
            tableMapping.ColumnMappings.Add("nome_etapa", "nome_etapa")
            tableMapping.ColumnMappings.Add("cod_agente_venda", "cod_agente_venda")
            tableMapping.ColumnMappings.Add("nome_usuario", "nome_usuario")
            tableMapping.ColumnMappings.Add("total_mercadoria", "total_mercadoria")
            tableMapping.ColumnMappings.Add("data_ultimo_follow_up", "data_ultimo_follow_up")
            tableMapping.ColumnMappings.Add("cf_cliente", "cf_cliente")
            tableMapping.ColumnMappings.Add("f_empresa", "f_empresa")
            tableMapping.ColumnMappings.Add("f_etapa1", "f_etapa1")
            tableMapping.ColumnMappings.Add("f_etapa2", "f_etapa2")
            tableMapping.ColumnMappings.Add("f_cadastramento1", "f_cadastramento1")
            tableMapping.ColumnMappings.Add("f_cadastramento2", "f_cadastramento2")
            tableMapping.ColumnMappings.Add("f_cod_status", "f_cod_status")
            tableMapping.ColumnMappings.Add("f_cod_agente_venda", "f_cod_agente_venda")
            tableMapping.ColumnMappings.Add("f_cod_representante", "f_cod_representante")
            tableMapping.ColumnMappings.Add("f_cod_canal_venda", "f_cod_canal_venda")
            tableMapping.ColumnMappings.Add("f_cod_item", "f_cod_item")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      SELECT nc.cod_negociacao_cliente,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "ee.cod_emitente,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ee.nome,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ee.estad"& _ 
                "o_sigla,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ee.cidade_nome,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ee.telefo"& _ 
                "ne1||if trim(isnull(co.ramal,'')) = '' then '' else '/' + co.ramal endif as tele"& _ 
                "fone1,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      co.cod_contato,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      co.nome AS "& _ 
                "nome_contato,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      nc.data_recontato,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      n"& _ 
                "c.cod_etapa,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      etp.descricao nome_etapa,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "     nc.cod_agente_venda,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ag.nome_usuario,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "         nc.total_mercadoria,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (SELECT        MAX(f.data_f"& _ 
                "ollow_up)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      FROM            follow_up_emitente f"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             WHERE        f.tipo = 2 AND f.empresa = nc.empresa AND f.estabeleci"& _ 
                "mento = nc.estabelecimento AND f.cod_negociacao_cliente = nc.cod_negociacao_clie"& _ 
                "nte) AS data_ultimo_follow_up,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ee.nome || ' (' || ee.cod_"& _ 
                "emitente || ')' AS cf_cliente,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ? as f_empresa,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             ? as f_etapa1,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ? as f_etapa2,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "         f_converte_string_em_numeric( convert(date, ?, 103)) f_cadastramento1,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      f_converte_string_em_numeric( convert(date, ?, 103)) f_ca"& _ 
                "dastramento2,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ? as f_cod_status,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ?"& _ 
                " as f_cod_agente_venda,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ? as f_cod_representante,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                ? as f_cod_canal_venda,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      ? as f_cod_item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                      FROM results.v_emitente_endereco ee,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "  results.etapa_negociacao etp,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      results.sysusuario ag,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                     results.negociacao_cliente nc,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      resul"& _ 
                "ts.contatos co"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      WHERE nc.cod_emitente = ee.cod_emitente"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                     AND nc.cnpj         = ee.cnpj"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      AND et"& _ 
                "p.empresa     = nc.empresa"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      AND etp.cod_etapa   = nc.cod_e"& _ 
                "tapa"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      AND ag.cod_usuario  = nc.cod_agente_venda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "             AND co.cod_emitente = nc.cod_emitente"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      AND nc"& _ 
                ".cod_contato = co.cod_contato"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      AND nc.empresa      = f_emp"& _ 
                "resa"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      AND nc.cod_etapa between f_etapa1 and f_etapa2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                  AND nc.data_cadastramento between f_cadastramento1 and f_cadas"& _ 
                "tramento2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      AND (f_cod_status = 0 or nc.cod_status = f_cod_"& _ 
                "status)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      AND (f_cod_agente_venda = 0 or nc.cod_agente_vend"& _ 
                "a = f_cod_agente_venda)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      AND (f_cod_representante = 0 or n"& _ 
                "c.cod_representante = f_cod_representante)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      AND (f_cod_can"& _ 
                "al_venda = 0 or nc.cod_canal_venda = f_cod_canal_venda)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      A"& _ 
                "ND (f_cod_item = '' or exists(select 1 from negociacao_cliente_item nci where nc"& _ 
                "i.empresa = nc.empresa and nci.estabelecimento = nc.estabelecimento and nci.cod_"& _ 
                "negociacao_cliente = nc.cod_negociacao_cliente and nci.cod_item = f_cod_item) )"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param1", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param2", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param3", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param4", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param5", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param6", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param7", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param8", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param9", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param10", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSNegociacao.RelNegociacaoResumidoDataTable, ByVal Param1 As String, ByVal Param2 As String, ByVal Param3 As String, ByVal Param4 As String, ByVal Param5 As String, ByVal Param6 As String, ByVal Param7 As String, ByVal Param8 As String, ByVal Param9 As String, ByVal Param10 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Param2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param2")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Param2,String)
            End If
            If (Param3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param3")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Param3,String)
            End If
            If (Param4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param4")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Param4,String)
            End If
            If (Param5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param5")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Param5,String)
            End If
            If (Param6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param6")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Param6,String)
            End If
            If (Param7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param7")
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Param7,String)
            End If
            If (Param8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param8")
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Param8,String)
            End If
            If (Param9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param9")
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Param9,String)
            End If
            If (Param10 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param10")
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Param10,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Param1 As String, ByVal Param2 As String, ByVal Param3 As String, ByVal Param4 As String, ByVal Param5 As String, ByVal Param6 As String, ByVal Param7 As String, ByVal Param8 As String, ByVal Param9 As String, ByVal Param10 As String) As DSNegociacao.RelNegociacaoResumidoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Param2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param2")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Param2,String)
            End If
            If (Param3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param3")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Param3,String)
            End If
            If (Param4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param4")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Param4,String)
            End If
            If (Param5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param5")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Param5,String)
            End If
            If (Param6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param6")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Param6,String)
            End If
            If (Param7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param7")
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Param7,String)
            End If
            If (Param8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param8")
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Param8,String)
            End If
            If (Param9 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param9")
            Else
                Me.Adapter.SelectCommand.Parameters(8).Value = CType(Param9,String)
            End If
            If (Param10 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param10")
            Else
                Me.Adapter.SelectCommand.Parameters(9).Value = CType(Param10,String)
            End If
            Dim dataTable As DSNegociacao.RelNegociacaoResumidoDataTable = New DSNegociacao.RelNegociacaoResumidoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RelAtividadeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RelAtividade"
            tableMapping.ColumnMappings.Add("estado_sigla", "estado_sigla")
            tableMapping.ColumnMappings.Add("cidade_nome", "cidade_nome")
            tableMapping.ColumnMappings.Add("data_recontato", "data_recontato")
            tableMapping.ColumnMappings.Add("nome_usuario", "nome_usuario")
            tableMapping.ColumnMappings.Add("empresa", "empresa")
            tableMapping.ColumnMappings.Add("tipo_info", "tipo_info")
            tableMapping.ColumnMappings.Add("seq_follow_up", "seq_follow_up")
            tableMapping.ColumnMappings.Add("data_follow_up", "data_follow_up")
            tableMapping.ColumnMappings.Add("hora_follow_up", "hora_follow_up")
            tableMapping.ColumnMappings.Add("cod_negociacao_cliente", "cod_negociacao_cliente")
            tableMapping.ColumnMappings.Add("nome_representante", "nome_representante")
            tableMapping.ColumnMappings.Add("cod_representante", "cod_representante")
            tableMapping.ColumnMappings.Add("nome_cliente", "nome_cliente")
            tableMapping.ColumnMappings.Add("cod_emitente", "cod_emitente")
            tableMapping.ColumnMappings.Add("cnpj", "cnpj")
            tableMapping.ColumnMappings.Add("desc_mercado", "desc_mercado")
            tableMapping.ColumnMappings.Add("itens", "itens")
            tableMapping.ColumnMappings.Add("desc_acao", "desc_acao")
            tableMapping.ColumnMappings.Add("desc_fonte_origem", "desc_fonte_origem")
            tableMapping.ColumnMappings.Add("desc_funil", "desc_funil")
            tableMapping.ColumnMappings.Add("desc_etapa", "desc_etapa")
            tableMapping.ColumnMappings.Add("desc_situacao", "desc_situacao")
            tableMapping.ColumnMappings.Add("total_pedido", "total_pedido")
            tableMapping.ColumnMappings.Add("cod_usuario", "cod_usuario")
            tableMapping.ColumnMappings.Add("desc_follow_up", "desc_follow_up")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings("ConnectionString").ConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "call sp_rel_atividades( ?, ?, ?, ?, ?, ?, ?, ? )"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param1", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param2", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param3", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param4", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param5", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param6", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param7", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param8", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSNegociacao.RelAtividadeDataTable, ByVal Param1 As String, ByVal Param2 As String, ByVal Param3 As String, ByVal Param4 As String, ByVal Param5 As String, ByVal Param6 As String, ByVal Param7 As String, ByVal Param8 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Param2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param2")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Param2,String)
            End If
            If (Param3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param3")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Param3,String)
            End If
            If (Param4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param4")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Param4,String)
            End If
            If (Param5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param5")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Param5,String)
            End If
            If (Param6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param6")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Param6,String)
            End If
            If (Param7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param7")
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Param7,String)
            End If
            If (Param8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param8")
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Param8,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Param1 As String, ByVal Param2 As String, ByVal Param3 As String, ByVal Param4 As String, ByVal Param5 As String, ByVal Param6 As String, ByVal Param7 As String, ByVal Param8 As String) As DSNegociacao.RelAtividadeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Param2 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param2")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Param2,String)
            End If
            If (Param3 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param3")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Param3,String)
            End If
            If (Param4 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param4")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Param4,String)
            End If
            If (Param5 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param5")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Param5,String)
            End If
            If (Param6 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param6")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Param6,String)
            End If
            If (Param7 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param7")
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Param7,String)
            End If
            If (Param8 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param8")
            Else
                Me.Adapter.SelectCommand.Parameters(7).Value = CType(Param8,String)
            End If
            Dim dataTable As DSNegociacao.RelAtividadeDataTable = New DSNegociacao.RelAtividadeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSNegociacao, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSNegociacao, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSNegociacao, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSNegociacao) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
